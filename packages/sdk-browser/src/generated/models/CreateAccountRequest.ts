/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CreateAccountRequest
 */
export interface CreateAccountRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateAccountRequest
     */
    ownerId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateAccountRequest
     */
    displayName?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof CreateAccountRequest
     */
    metadata?: { [key: string]: string; };
}

/**
 * Check if a given object implements the CreateAccountRequest interface.
 */
export function instanceOfCreateAccountRequest(value: object): value is CreateAccountRequest {
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    return true;
}

export function CreateAccountRequestFromJSON(json: any): CreateAccountRequest {
    return CreateAccountRequestFromJSONTyped(json, false);
}

export function CreateAccountRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAccountRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'ownerId': json['ownerId'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function CreateAccountRequestToJSON(json: any): CreateAccountRequest {
    return CreateAccountRequestToJSONTyped(json, false);
}

export function CreateAccountRequestToJSONTyped(value?: CreateAccountRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ownerId': value['ownerId'],
        'displayName': value['displayName'],
        'metadata': value['metadata'],
    };
}

