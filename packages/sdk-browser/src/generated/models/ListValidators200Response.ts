/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Validator } from './Validator.js';
import {
    ValidatorFromJSON,
    ValidatorFromJSONTyped,
    ValidatorToJSON,
    ValidatorToJSONTyped,
} from './Validator.js';

/**
 * 
 * @export
 * @interface ListValidators200Response
 */
export interface ListValidators200Response {
    /**
     * 
     * @type {Array<Validator>}
     * @memberof ListValidators200Response
     */
    validators?: Array<Validator>;
}

/**
 * Check if a given object implements the ListValidators200Response interface.
 */
export function instanceOfListValidators200Response(value: object): value is ListValidators200Response {
    return true;
}

export function ListValidators200ResponseFromJSON(json: any): ListValidators200Response {
    return ListValidators200ResponseFromJSONTyped(json, false);
}

export function ListValidators200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListValidators200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'validators': json['validators'] == null ? undefined : ((json['validators'] as Array<any>).map(ValidatorFromJSON)),
    };
}

export function ListValidators200ResponseToJSON(json: any): ListValidators200Response {
    return ListValidators200ResponseToJSONTyped(json, false);
}

export function ListValidators200ResponseToJSONTyped(value?: ListValidators200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'validators': value['validators'] == null ? undefined : ((value['validators'] as Array<any>).map(ValidatorToJSON)),
    };
}

