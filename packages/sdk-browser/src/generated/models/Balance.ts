/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { MonetaryAmount } from './MonetaryAmount.js';
import {
    MonetaryAmountFromJSON,
    MonetaryAmountFromJSONTyped,
    MonetaryAmountToJSON,
    MonetaryAmountToJSONTyped,
} from './MonetaryAmount.js';

/**
 * 
 * @export
 * @interface Balance
 */
export interface Balance {
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    accountId: string;
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    currency: string;
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof Balance
     */
    available: MonetaryAmount;
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof Balance
     */
    total: MonetaryAmount;
    /**
     * 
     * @type {Date}
     * @memberof Balance
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Balance interface.
 */
export function instanceOfBalance(value: object): value is Balance {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('available' in value) || value['available'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function BalanceFromJSON(json: any): Balance {
    return BalanceFromJSONTyped(json, false);
}

export function BalanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Balance {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['accountId'],
        'currency': json['currency'],
        'available': MonetaryAmountFromJSON(json['available']),
        'total': MonetaryAmountFromJSON(json['total']),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function BalanceToJSON(json: any): Balance {
    return BalanceToJSONTyped(json, false);
}

export function BalanceToJSONTyped(value?: Balance | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accountId': value['accountId'],
        'currency': value['currency'],
        'available': MonetaryAmountToJSON(value['available']),
        'total': MonetaryAmountToJSON(value['total']),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

