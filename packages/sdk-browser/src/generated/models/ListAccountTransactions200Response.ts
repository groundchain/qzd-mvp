/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Transaction } from './Transaction.js';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
    TransactionToJSONTyped,
} from './Transaction.js';

/**
 * 
 * @export
 * @interface ListAccountTransactions200Response
 */
export interface ListAccountTransactions200Response {
    /**
     * 
     * @type {Array<Transaction>}
     * @memberof ListAccountTransactions200Response
     */
    items?: Array<Transaction>;
    /**
     * 
     * @type {string}
     * @memberof ListAccountTransactions200Response
     */
    nextCursor?: string | null;
}

/**
 * Check if a given object implements the ListAccountTransactions200Response interface.
 */
export function instanceOfListAccountTransactions200Response(value: object): value is ListAccountTransactions200Response {
    return true;
}

export function ListAccountTransactions200ResponseFromJSON(json: any): ListAccountTransactions200Response {
    return ListAccountTransactions200ResponseFromJSONTyped(json, false);
}

export function ListAccountTransactions200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListAccountTransactions200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(TransactionFromJSON)),
        'nextCursor': json['nextCursor'] == null ? undefined : json['nextCursor'],
    };
}

export function ListAccountTransactions200ResponseToJSON(json: any): ListAccountTransactions200Response {
    return ListAccountTransactions200ResponseToJSONTyped(json, false);
}

export function ListAccountTransactions200ResponseToJSONTyped(value?: ListAccountTransactions200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(TransactionToJSON)),
        'nextCursor': value['nextCursor'],
    };
}

