/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { MonetaryAmount } from './MonetaryAmount.js';
import {
    MonetaryAmountFromJSON,
    MonetaryAmountFromJSONTyped,
    MonetaryAmountToJSON,
    MonetaryAmountToJSONTyped,
} from './MonetaryAmount.js';
import type { USRemitAcquireQZDRequestComplianceDeclarations } from './USRemitAcquireQZDRequestComplianceDeclarations.js';
import {
    USRemitAcquireQZDRequestComplianceDeclarationsFromJSON,
    USRemitAcquireQZDRequestComplianceDeclarationsFromJSONTyped,
    USRemitAcquireQZDRequestComplianceDeclarationsToJSON,
    USRemitAcquireQZDRequestComplianceDeclarationsToJSONTyped,
} from './USRemitAcquireQZDRequestComplianceDeclarations.js';

/**
 * 
 * @export
 * @interface USRemitAcquireQZDRequest
 */
export interface USRemitAcquireQZDRequest {
    /**
     * 
     * @type {string}
     * @memberof USRemitAcquireQZDRequest
     */
    remitterAccountId: string;
    /**
     * 
     * @type {string}
     * @memberof USRemitAcquireQZDRequest
     */
    beneficiaryAccountId: string;
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof USRemitAcquireQZDRequest
     */
    usdAmount: MonetaryAmount;
    /**
     * 
     * @type {string}
     * @memberof USRemitAcquireQZDRequest
     */
    purposeCode?: string;
    /**
     * 
     * @type {USRemitAcquireQZDRequestComplianceDeclarations}
     * @memberof USRemitAcquireQZDRequest
     */
    complianceDeclarations?: USRemitAcquireQZDRequestComplianceDeclarations;
}

/**
 * Check if a given object implements the USRemitAcquireQZDRequest interface.
 */
export function instanceOfUSRemitAcquireQZDRequest(value: object): value is USRemitAcquireQZDRequest {
    if (!('remitterAccountId' in value) || value['remitterAccountId'] === undefined) return false;
    if (!('beneficiaryAccountId' in value) || value['beneficiaryAccountId'] === undefined) return false;
    if (!('usdAmount' in value) || value['usdAmount'] === undefined) return false;
    return true;
}

export function USRemitAcquireQZDRequestFromJSON(json: any): USRemitAcquireQZDRequest {
    return USRemitAcquireQZDRequestFromJSONTyped(json, false);
}

export function USRemitAcquireQZDRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): USRemitAcquireQZDRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'remitterAccountId': json['remitterAccountId'],
        'beneficiaryAccountId': json['beneficiaryAccountId'],
        'usdAmount': MonetaryAmountFromJSON(json['usdAmount']),
        'purposeCode': json['purposeCode'] == null ? undefined : json['purposeCode'],
        'complianceDeclarations': json['complianceDeclarations'] == null ? undefined : USRemitAcquireQZDRequestComplianceDeclarationsFromJSON(json['complianceDeclarations']),
    };
}

export function USRemitAcquireQZDRequestToJSON(json: any): USRemitAcquireQZDRequest {
    return USRemitAcquireQZDRequestToJSONTyped(json, false);
}

export function USRemitAcquireQZDRequestToJSONTyped(value?: USRemitAcquireQZDRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'remitterAccountId': value['remitterAccountId'],
        'beneficiaryAccountId': value['beneficiaryAccountId'],
        'usdAmount': MonetaryAmountToJSON(value['usdAmount']),
        'purposeCode': value['purposeCode'],
        'complianceDeclarations': USRemitAcquireQZDRequestComplianceDeclarationsToJSON(value['complianceDeclarations']),
    };
}

