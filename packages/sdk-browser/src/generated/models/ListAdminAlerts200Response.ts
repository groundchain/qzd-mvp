/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Alert } from './Alert.js';
import {
    AlertFromJSON,
    AlertFromJSONTyped,
    AlertToJSON,
    AlertToJSONTyped,
} from './Alert.js';

/**
 * 
 * @export
 * @interface ListAdminAlerts200Response
 */
export interface ListAdminAlerts200Response {
    /**
     * 
     * @type {Array<Alert>}
     * @memberof ListAdminAlerts200Response
     */
    alerts?: Array<Alert>;
}

/**
 * Check if a given object implements the ListAdminAlerts200Response interface.
 */
export function instanceOfListAdminAlerts200Response(value: object): value is ListAdminAlerts200Response {
    return true;
}

export function ListAdminAlerts200ResponseFromJSON(json: any): ListAdminAlerts200Response {
    return ListAdminAlerts200ResponseFromJSONTyped(json, false);
}

export function ListAdminAlerts200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListAdminAlerts200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'alerts': json['alerts'] == null ? undefined : ((json['alerts'] as Array<any>).map(AlertFromJSON)),
    };
}

export function ListAdminAlerts200ResponseToJSON(json: any): ListAdminAlerts200Response {
    return ListAdminAlerts200ResponseToJSONTyped(json, false);
}

export function ListAdminAlerts200ResponseToJSONTyped(value?: ListAdminAlerts200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alerts': value['alerts'] == null ? undefined : ((value['alerts'] as Array<any>).map(AlertToJSON)),
    };
}

