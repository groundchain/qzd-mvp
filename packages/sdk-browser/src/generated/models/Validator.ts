/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface Validator
 */
export interface Validator {
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    endpoint: string;
}

/**
 * Check if a given object implements the Validator interface.
 */
export function instanceOfValidator(value: object): value is Validator {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('endpoint' in value) || value['endpoint'] === undefined) return false;
    return true;
}

export function ValidatorFromJSON(json: any): Validator {
    return ValidatorFromJSONTyped(json, false);
}

export function ValidatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Validator {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'status': json['status'],
        'endpoint': json['endpoint'],
    };
}

export function ValidatorToJSON(json: any): Validator {
    return ValidatorToJSONTyped(json, false);
}

export function ValidatorToJSONTyped(value?: Validator | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'status': value['status'],
        'endpoint': value['endpoint'],
    };
}

