/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface Alert
 */
export interface Alert {
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    severity: AlertSeverityEnum;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    message: string;
    /**
     * 
     * @type {Date}
     * @memberof Alert
     */
    createdAt: Date;
}


/**
 * @export
 */
export const AlertSeverityEnum = {
    Low: 'low',
    Medium: 'medium',
    High: 'high'
} as const;
export type AlertSeverityEnum = typeof AlertSeverityEnum[keyof typeof AlertSeverityEnum];


/**
 * Check if a given object implements the Alert interface.
 */
export function instanceOfAlert(value: object): value is Alert {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function AlertFromJSON(json: any): Alert {
    return AlertFromJSONTyped(json, false);
}

export function AlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): Alert {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'severity': json['severity'],
        'message': json['message'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function AlertToJSON(json: any): Alert {
    return AlertToJSONTyped(json, false);
}

export function AlertToJSONTyped(value?: Alert | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'severity': value['severity'],
        'message': value['message'],
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

