/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  GetLiveness200Response,
  GetReadiness200Response,
} from '../models/index.js';
import {
    GetLiveness200ResponseFromJSON,
    GetLiveness200ResponseToJSON,
    GetReadiness200ResponseFromJSON,
    GetReadiness200ResponseToJSON,
} from '../models/index.js';

/**
 * HealthApi - interface
 * 
 * @export
 * @interface HealthApiInterface
 */
export interface HealthApiInterface {
    /**
     * 
     * @summary Liveness probe endpoint.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HealthApiInterface
     */
    getLivenessRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetLiveness200Response>>;

    /**
     * Liveness probe endpoint.
     */
    getLiveness(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetLiveness200Response>;

    /**
     * 
     * @summary Readiness probe endpoint.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HealthApiInterface
     */
    getReadinessRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetReadiness200Response>>;

    /**
     * Readiness probe endpoint.
     */
    getReadiness(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetReadiness200Response>;

}

/**
 * 
 */
export class HealthApi extends runtime.BaseAPI implements HealthApiInterface {

    /**
     * Liveness probe endpoint.
     */
    async getLivenessRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetLiveness200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/health/live`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetLiveness200ResponseFromJSON(jsonValue));
    }

    /**
     * Liveness probe endpoint.
     */
    async getLiveness(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetLiveness200Response> {
        const response = await this.getLivenessRaw(initOverrides);
        return await response.value();
    }

    /**
     * Readiness probe endpoint.
     */
    async getReadinessRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetReadiness200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/health/ready`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetReadiness200ResponseFromJSON(jsonValue));
    }

    /**
     * Readiness probe endpoint.
     */
    async getReadiness(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetReadiness200Response> {
        const response = await this.getReadinessRaw(initOverrides);
        return await response.value();
    }

}
