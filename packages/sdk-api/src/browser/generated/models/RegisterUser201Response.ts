/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Account } from './Account.js';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
    AccountToJSONTyped,
} from './Account.js';

/**
 * 
 * @export
 * @interface RegisterUser201Response
 */
export interface RegisterUser201Response {
    /**
     * 
     * @type {string}
     * @memberof RegisterUser201Response
     */
    userId?: string;
    /**
     * 
     * @type {Account}
     * @memberof RegisterUser201Response
     */
    account?: Account;
    /**
     * Session token for the newly created user.
     * @type {string}
     * @memberof RegisterUser201Response
     */
    token?: string;
}

/**
 * Check if a given object implements the RegisterUser201Response interface.
 */
export function instanceOfRegisterUser201Response(value: object): value is RegisterUser201Response {
    return true;
}

export function RegisterUser201ResponseFromJSON(json: any): RegisterUser201Response {
    return RegisterUser201ResponseFromJSONTyped(json, false);
}

export function RegisterUser201ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterUser201Response {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'account': json['account'] == null ? undefined : AccountFromJSON(json['account']),
        'token': json['token'] == null ? undefined : json['token'],
    };
}

export function RegisterUser201ResponseToJSON(json: any): RegisterUser201Response {
    return RegisterUser201ResponseToJSONTyped(json, false);
}

export function RegisterUser201ResponseToJSONTyped(value?: RegisterUser201Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'account': AccountToJSON(value['account']),
        'token': value['token'],
    };
}

