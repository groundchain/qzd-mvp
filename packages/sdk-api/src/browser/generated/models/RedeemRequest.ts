/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { MonetaryAmount } from './MonetaryAmount.js';
import {
    MonetaryAmountFromJSON,
    MonetaryAmountFromJSONTyped,
    MonetaryAmountToJSON,
    MonetaryAmountToJSONTyped,
} from './MonetaryAmount.js';
import type { RedeemRequestDestinationBankAccount } from './RedeemRequestDestinationBankAccount.js';
import {
    RedeemRequestDestinationBankAccountFromJSON,
    RedeemRequestDestinationBankAccountFromJSONTyped,
    RedeemRequestDestinationBankAccountToJSON,
    RedeemRequestDestinationBankAccountToJSONTyped,
} from './RedeemRequestDestinationBankAccount.js';

/**
 * 
 * @export
 * @interface RedeemRequest
 */
export interface RedeemRequest {
    /**
     * 
     * @type {string}
     * @memberof RedeemRequest
     */
    accountId: string;
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof RedeemRequest
     */
    amount: MonetaryAmount;
    /**
     * 
     * @type {RedeemRequestDestinationBankAccount}
     * @memberof RedeemRequest
     */
    destinationBankAccount: RedeemRequestDestinationBankAccount;
}

/**
 * Check if a given object implements the RedeemRequest interface.
 */
export function instanceOfRedeemRequest(value: object): value is RedeemRequest {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('destinationBankAccount' in value) || value['destinationBankAccount'] === undefined) return false;
    return true;
}

export function RedeemRequestFromJSON(json: any): RedeemRequest {
    return RedeemRequestFromJSONTyped(json, false);
}

export function RedeemRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RedeemRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['accountId'],
        'amount': MonetaryAmountFromJSON(json['amount']),
        'destinationBankAccount': RedeemRequestDestinationBankAccountFromJSON(json['destinationBankAccount']),
    };
}

export function RedeemRequestToJSON(json: any): RedeemRequest {
    return RedeemRequestToJSONTyped(json, false);
}

export function RedeemRequestToJSONTyped(value?: RedeemRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accountId': value['accountId'],
        'amount': MonetaryAmountToJSON(value['amount']),
        'destinationBankAccount': RedeemRequestDestinationBankAccountToJSON(value['destinationBankAccount']),
    };
}

