/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { MonetaryAmount } from './MonetaryAmount.js';
import {
    MonetaryAmountFromJSON,
    MonetaryAmountFromJSONTyped,
    MonetaryAmountToJSON,
    MonetaryAmountToJSONTyped,
} from './MonetaryAmount.js';

/**
 * 
 * @export
 * @interface QuoteResponse
 */
export interface QuoteResponse {
    /**
     * 
     * @type {string}
     * @memberof QuoteResponse
     */
    quoteId: string;
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof QuoteResponse
     */
    sellAmount: MonetaryAmount;
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof QuoteResponse
     */
    buyAmount: MonetaryAmount;
    /**
     * 
     * @type {string}
     * @memberof QuoteResponse
     */
    rate: string;
    /**
     * 
     * @type {Date}
     * @memberof QuoteResponse
     */
    expiresAt: Date;
}

/**
 * Check if a given object implements the QuoteResponse interface.
 */
export function instanceOfQuoteResponse(value: object): value is QuoteResponse {
    if (!('quoteId' in value) || value['quoteId'] === undefined) return false;
    if (!('sellAmount' in value) || value['sellAmount'] === undefined) return false;
    if (!('buyAmount' in value) || value['buyAmount'] === undefined) return false;
    if (!('rate' in value) || value['rate'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    return true;
}

export function QuoteResponseFromJSON(json: any): QuoteResponse {
    return QuoteResponseFromJSONTyped(json, false);
}

export function QuoteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'quoteId': json['quoteId'],
        'sellAmount': MonetaryAmountFromJSON(json['sellAmount']),
        'buyAmount': MonetaryAmountFromJSON(json['buyAmount']),
        'rate': json['rate'],
        'expiresAt': (new Date(json['expiresAt'])),
    };
}

export function QuoteResponseToJSON(json: any): QuoteResponse {
    return QuoteResponseToJSONTyped(json, false);
}

export function QuoteResponseToJSONTyped(value?: QuoteResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'quoteId': value['quoteId'],
        'sellAmount': MonetaryAmountToJSON(value['sellAmount']),
        'buyAmount': MonetaryAmountToJSON(value['buyAmount']),
        'rate': value['rate'],
        'expiresAt': ((value['expiresAt']).toISOString()),
    };
}

