/* tslint:disable */
/* eslint-disable */
/**
 * QZD Remittance API
 * The QZD Remittance API enables account management, digital asset issuance and redemption, and remittance operations with comprehensive observability and admin tooling. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { MonetaryAmount } from './MonetaryAmount.js';
import {
    MonetaryAmountFromJSON,
    MonetaryAmountFromJSONTyped,
    MonetaryAmountToJSON,
    MonetaryAmountToJSONTyped,
} from './MonetaryAmount.js';

/**
 * 
 * @export
 * @interface USRemitAcquireQZDRequest
 */
export interface USRemitAcquireQZDRequest {
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof USRemitAcquireQZDRequest
     */
    usdAmount: MonetaryAmount;
    /**
     * MSISDN of the sender initiating the remittance.
     * @type {string}
     * @memberof USRemitAcquireQZDRequest
     */
    senderPhone: string;
    /**
     * Beneficiary account identifier if known.
     * @type {string}
     * @memberof USRemitAcquireQZDRequest
     */
    receiverAccountId?: string;
    /**
     * Beneficiary phone number when an account identifier is unavailable.
     * @type {string}
     * @memberof USRemitAcquireQZDRequest
     */
    receiverPhone?: string;
    /**
     * Optional pricing program override for this acquisition.
     * @type {string}
     * @memberof USRemitAcquireQZDRequest
     */
    scenario?: USRemitAcquireQZDRequestScenarioEnum;
}


/**
 * @export
 */
export const USRemitAcquireQZDRequestScenarioEnum = {
    Default: 'DEFAULT',
    Tariffed: 'TARIFFED',
    Subsidized: 'SUBSIDIZED'
} as const;
export type USRemitAcquireQZDRequestScenarioEnum = typeof USRemitAcquireQZDRequestScenarioEnum[keyof typeof USRemitAcquireQZDRequestScenarioEnum];


/**
 * Check if a given object implements the USRemitAcquireQZDRequest interface.
 */
export function instanceOfUSRemitAcquireQZDRequest(value: object): value is USRemitAcquireQZDRequest {
    if (!('usdAmount' in value) || value['usdAmount'] === undefined) return false;
    if (!('senderPhone' in value) || value['senderPhone'] === undefined) return false;
    return true;
}

export function USRemitAcquireQZDRequestFromJSON(json: any): USRemitAcquireQZDRequest {
    return USRemitAcquireQZDRequestFromJSONTyped(json, false);
}

export function USRemitAcquireQZDRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): USRemitAcquireQZDRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'usdAmount': MonetaryAmountFromJSON(json['usdAmount']),
        'senderPhone': json['senderPhone'],
        'receiverAccountId': json['receiverAccountId'] == null ? undefined : json['receiverAccountId'],
        'receiverPhone': json['receiverPhone'] == null ? undefined : json['receiverPhone'],
        'scenario': json['scenario'] == null ? undefined : json['scenario'],
    };
}

export function USRemitAcquireQZDRequestToJSON(json: any): USRemitAcquireQZDRequest {
    return USRemitAcquireQZDRequestToJSONTyped(json, false);
}

export function USRemitAcquireQZDRequestToJSONTyped(value?: USRemitAcquireQZDRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'usdAmount': MonetaryAmountToJSON(value['usdAmount']),
        'senderPhone': value['senderPhone'],
        'receiverAccountId': value['receiverAccountId'],
        'receiverPhone': value['receiverPhone'],
        'scenario': value['scenario'],
    };
}

