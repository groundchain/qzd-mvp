import{_ as a,c as t,o,ag as n}from"./chunks/framework.B0i2KhIm.js";const m=JSON.parse('{"title":"Wallet User Manual","description":"","frontmatter":{},"headers":[],"relativePath":"manuals/wallet-user.md","filePath":"manuals/wallet-user.md","lastUpdated":1759451714000}'),r={name:"manuals/wallet-user.md"};function i(l,e,s,c,d,u){return o(),t("div",null,[...e[0]||(e[0]=[n('<h1 id="wallet-user-manual" tabindex="-1">Wallet User Manual <a class="header-anchor" href="#wallet-user-manual" aria-label="Permalink to &quot;Wallet User Manual&quot;">​</a></h1><p>The wallet web application (<code>apps/wallet-web</code>) helps retail customers manage QZD accounts. It uses the browser SDK to call the API exposed at <code>http://localhost:3000</code> by default.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Wallet service running via <code>pnpm --filter @qzd/wallet-web dev -- --host 0.0.0.0</code> or <code>docker compose up wallet-web</code>.</li><li>API reachable at the base URL configured in <code>VITE_API_BASE_URL</code>.</li><li>An account ID issued by the API or the dev seed script.</li></ul><h2 id="sign-up-or-sign-in" tabindex="-1">Sign up or sign in <a class="header-anchor" href="#sign-up-or-sign-in" aria-label="Permalink to &quot;Sign up or sign in&quot;">​</a></h2><ol><li>Enter the API base URL if you are not targeting the default <code>http://localhost:3000</code>.</li><li>Use <strong>Create account</strong> to register with an email, password, and full name. This calls <code>POST /auth/register</code> followed by <code>POST /accounts</code>.</li><li>Use <strong>Log in</strong> with the same credentials to request a bearer token via <code>POST /auth/login</code>. The UI stores the token in memory only.</li></ol><h2 id="load-account-data" tabindex="-1">Load account data <a class="header-anchor" href="#load-account-data" aria-label="Permalink to &quot;Load account data&quot;">​</a></h2><ol><li>Paste your account ID and submit <strong>Load account</strong>.</li><li>The UI will fetch the latest balance (<code>GET /accounts/{id}/balance</code>) and the 25 most recent transactions (<code>GET /accounts/{id}/transactions</code>).</li><li>Refresh the section any time with the <strong>Reload</strong> button.</li></ol><h2 id="send-a-transfer" tabindex="-1">Send a transfer <a class="header-anchor" href="#send-a-transfer" aria-label="Permalink to &quot;Send a transfer&quot;">​</a></h2><ol><li>Load an account and keep the session active (token present).</li><li>Enter the destination account ID, amount, currency, and optional memo.</li><li>Submit the form to trigger <code>POST /tx/transfer</code>. The UI generates an idempotency key automatically and surfaces API errors inline.</li></ol><h2 id="preview-remittance-quotes" tabindex="-1">Preview remittance quotes <a class="header-anchor" href="#preview-remittance-quotes" aria-label="Permalink to &quot;Preview remittance quotes&quot;">​</a></h2><ol><li>With an account loaded, open the <strong>Preview quote</strong> section.</li><li>Choose a scenario (Default, Tariffed, Subsidized) and USD sell amount.</li><li>Submit to call <code>POST /simulate/quote</code>. The response includes buy/sell amounts, effective rate, and expiration timestamp.</li></ol><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><ul><li><strong>401 Unauthorized</strong> – The bearer token may be expired. Log in again.</li><li><strong>404 Account not found</strong> – Ensure the account ID matches one issued by the API.</li><li><strong>Transfer stuck</strong> – Check the runbook for <code>POST /tx/transfer</code> guidance and confirm the memo matches Merchant POS invoices when applicable.</li></ul>',14)])])}const p=a(r,[["render",i]]);export{m as __pageData,p as default};
